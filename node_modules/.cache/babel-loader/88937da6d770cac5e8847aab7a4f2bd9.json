{"ast":null,"code":"var _jsxFileName = \"/home/ogoidmp/dmpdev/projetos-trybe/sd-019-c-project-trybetunes/src/Pages/Album.jsx\";\nimport React, { Component } from 'react';\nimport './CssPages/Album.css';\nimport PropTypes from 'prop-types';\nimport Header from '../Components/Header';\nimport MusicCard from '../Components/MusicCard';\nimport getMusics from '../services/musicsAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Album extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAlbumTracks = async () => {\n      const {\n        match: {\n          params\n        }\n      } = this.props;\n      const [album, ...trackMusics] = await getMusics(params.id);\n      this.setState({\n        trackMusics,\n        album\n      });\n    };\n\n    this.state = {\n      trackMusics: [],\n      album: {}\n    };\n  }\n\n  componentDidMount() {\n    this.handleAlbumTracks();\n  }\n\n  render() {\n    const {\n      trackMusics,\n      album\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"album\",\n      \"data-testid\": \"page-album\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        className: \"header-album\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"album-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-and-title\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: album.artworkUrl100,\n            alt: \"Foto Capa do Album\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            \"data-testid\": \"artist-name\",\n            children: album.artistName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            \"data-testid\": \"album-name\",\n            children: album.collectionName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"div-tracks\",\n          children: trackMusics.map((track, index) => /*#__PURE__*/_jsxDEV(MusicCard, {\n            trackInfo: track,\n            index: index\n          }, track.trackId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 39\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nAlbum.propTypes = {\n  match: PropTypes.shape('n').isRequired\n};","map":{"version":3,"sources":["/home/ogoidmp/dmpdev/projetos-trybe/sd-019-c-project-trybetunes/src/Pages/Album.jsx"],"names":["React","Component","PropTypes","Header","MusicCard","getMusics","Album","constructor","props","handleAlbumTracks","match","params","album","trackMusics","id","setState","state","componentDidMount","render","artworkUrl100","artistName","collectionName","map","track","index","trackId","propTypes","shape","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,sBAAP;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;;AAEA,eAAe,MAAMC,KAAN,SAAoBL,SAApB,CAA8B;AAC3CM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAYnBC,iBAZmB,GAYC,YAAY;AAC9B,YAAM;AAAEC,QAAAA,KAAK,EAAE;AAAEC,UAAAA;AAAF;AAAT,UAAwB,KAAKH,KAAnC;AACA,YAAM,CAACI,KAAD,EAAQ,GAAGC,WAAX,IAA0B,MAAMR,SAAS,CAACM,MAAM,CAACG,EAAR,CAA/C;AACA,WAAKC,QAAL,CAAc;AAAEF,QAAAA,WAAF;AAAeD,QAAAA;AAAf,OAAd;AACD,KAhBkB;;AAEjB,SAAKI,KAAL,GAAa;AACXH,MAAAA,WAAW,EAAE,EADF;AAEXD,MAAAA,KAAK,EAAE;AAFI,KAAb;AAID;;AAEDK,EAAAA,iBAAiB,GAAG;AAClB,SAAKR,iBAAL;AACD;;AAQDS,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEL,MAAAA,WAAF;AAAeD,MAAAA;AAAf,QAAyB,KAAKI,KAApC;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAuB,qBAAY,YAAnC;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAS,QAAA,SAAS,EAAC,eAAnB;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,kCACE;AACE,YAAA,GAAG,EAAGJ,KAAK,CAACO,aADd;AAEE,YAAA,GAAG,EAAC;AAFN;AAAA;AAAA;AAAA;AAAA,kBADF,eAKE;AAAI,2BAAY,aAAhB;AAAA,sBAAgCP,KAAK,CAACQ;AAAtC;AAAA;AAAA;AAAA;AAAA,kBALF,eAME;AAAI,2BAAY,YAAhB;AAAA,sBAA+BR,KAAK,CAACS;AAArC;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAUE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,oBACGR,WAAW,CACTS,GADF,CACM,CAACC,KAAD,EAAQC,KAAR,kBAAmB,QAAC,SAAD;AAEtB,YAAA,SAAS,EAAGD,KAFU;AAGtB,YAAA,KAAK,EAAGC;AAHc,aAChBD,KAAK,CAACE,OADU;AAAA;AAAA;AAAA;AAAA,kBADzB;AADH;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAwBD;;AA7C0C;AAgD7CnB,KAAK,CAACoB,SAAN,GAAkB;AAChBhB,EAAAA,KAAK,EAAER,SAAS,CAACyB,KAAV,CAAgB,GAAhB,EAAqBC;AADZ,CAAlB","sourcesContent":["import React, { Component } from 'react';\nimport './CssPages/Album.css';\nimport PropTypes from 'prop-types';\nimport Header from '../Components/Header';\nimport MusicCard from '../Components/MusicCard';\nimport getMusics from '../services/musicsAPI';\n\nexport default class Album extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      trackMusics: [],\n      album: {},\n    };\n  }\n\n  componentDidMount() {\n    this.handleAlbumTracks();\n  }\n\n  handleAlbumTracks = async () => {\n    const { match: { params } } = this.props;\n    const [album, ...trackMusics] = await getMusics(params.id);\n    this.setState({ trackMusics, album });\n  }\n\n  render() {\n    const { trackMusics, album } = this.state;\n    return (\n      <div className=\"album\" data-testid=\"page-album\">\n        <Header className=\"header-album\" />\n        <section className=\"album-section\">\n          <div className=\"image-and-title\">\n            <img\n              src={ album.artworkUrl100 }\n              alt=\"Foto Capa do Album\"\n            />\n            <h1 data-testid=\"artist-name\">{ album.artistName }</h1>\n            <h3 data-testid=\"album-name\">{ album.collectionName }</h3>\n\n          </div>\n          <div className=\"div-tracks\">\n            {trackMusics\n              .map((track, index) => (<MusicCard\n                key={ track.trackId }\n                trackInfo={ track }\n                index={ index }\n              />))}\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n\nAlbum.propTypes = {\n  match: PropTypes.shape('n').isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}