{"ast":null,"code":"var _jsxFileName = \"/home/ogoidmp/dmpdev/projetos-trybe/sd-019-c-project-trybetunes/src/Components/MusicCard/index.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { addSong, removeSong, getFavoriteSongs } from '../../services/favoriteSongsAPI';\nimport Loading from '../../Pages/Loanding';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class MusicCard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSaveFavorites = async _ref => {\n      let {\n        target: {\n          checked\n        }\n      } = _ref;\n      this.setState({\n        isLoading: true\n      });\n      const {\n        trackInfo\n      } = this.props;\n\n      if (!checked) {\n        await removeSong(trackInfo);\n      } else {\n        await addSong(trackInfo);\n      }\n\n      this.setState({\n        isLoading: false,\n        checkSaveds: await getFavoriteSongs()\n      });\n    };\n\n    this.state = {\n      isLoading: false,\n      checkSaveds: []\n    };\n  }\n\n  render() {\n    const {\n      trackInfo: {\n        previewUrl,\n        key,\n        trackName,\n        trackId\n      }\n    } = this.props;\n    const {\n      isLoading,\n      checkSaveds\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: trackName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"audio-and-check\",\n        children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n          className: \"play\",\n          \"data-testid\": \"audio-component\",\n          src: previewUrl,\n          controls: true,\n          children: /*#__PURE__*/_jsxDEV(\"track\", {\n            kind: \"captions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"favorites\",\n          className: \"checkbox-label\",\n          children: [isLoading ? /*#__PURE__*/_jsxDEV(Loading, {\n            className: \"checkbox-loanding\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 26\n          }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"favorites\",\n            name: \"favorites\",\n            \"data-testid\": `checkbox-music-${trackId}`,\n            type: \"checkbox\",\n            className: \"checkHeart\",\n            checked: checkSaveds.some(track => track.trackId === trackId),\n            onChange: this.handleSaveFavorites\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this), \"Favorita\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nMusicCard.propTypes = {\n  trackInfo: PropTypes.shape('n').isRequired\n};","map":{"version":3,"sources":["/home/ogoidmp/dmpdev/projetos-trybe/sd-019-c-project-trybetunes/src/Components/MusicCard/index.jsx"],"names":["React","Component","PropTypes","addSong","removeSong","getFavoriteSongs","Loading","MusicCard","constructor","props","handleSaveFavorites","target","checked","setState","isLoading","trackInfo","checkSaveds","state","render","previewUrl","key","trackName","trackId","some","track","propTypes","shape","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,EAAkBC,UAAlB,EAA8BC,gBAA9B,QAAsD,iCAAtD;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAO,aAAP;;AAEA,eAAe,MAAMC,SAAN,SAAwBN,SAAxB,CAAkC;AAC/CO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAQnBC,mBARmB,GAQG,cAAmC;AAAA,UAA5B;AAAEC,QAAAA,MAAM,EAAE;AAAEC,UAAAA;AAAF;AAAV,OAA4B;AACvD,WAAKC,QAAL,CAAc;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAd;AACA,YAAM;AAAEC,QAAAA;AAAF,UAAgB,KAAKN,KAA3B;;AACA,UAAI,CAACG,OAAL,EAAc;AACZ,cAAMR,UAAU,CAACW,SAAD,CAAhB;AACD,OAFD,MAEO;AACL,cAAMZ,OAAO,CAACY,SAAD,CAAb;AACD;;AACD,WAAKF,QAAL,CAAc;AAAEC,QAAAA,SAAS,EAAE,KAAb;AAAoBE,QAAAA,WAAW,EAAE,MAAMX,gBAAgB;AAAvD,OAAd;AACD,KAjBkB;;AAEjB,SAAKY,KAAL,GAAa;AACXH,MAAAA,SAAS,EAAE,KADA;AAEXE,MAAAA,WAAW,EAAE;AAFF,KAAb;AAID;;AAaDE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEH,MAAAA,SAAS,EAAE;AACjBI,QAAAA,UADiB;AAEjBC,QAAAA,GAFiB;AAGjBC,QAAAA,SAHiB;AAIjBC,QAAAA;AAJiB;AAAb,QAKA,KAAKb,KALX;AAMA,UAAM;AAAEK,MAAAA,SAAF;AAAaE,MAAAA;AAAb,QAA6B,KAAKC,KAAxC;AAEA,wBACE;AAAA,8BAEE;AAAA,kBAAOI;AAAP;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,gCACE;AACE,UAAA,SAAS,EAAC,MADZ;AAEE,yBAAY,iBAFd;AAGE,UAAA,GAAG,EAAGF,UAHR;AAIE,UAAA,QAAQ,MAJV;AAAA,iCAME;AAAO,YAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,gBADF,eASE;AAAO,UAAA,OAAO,EAAC,WAAf;AAA2B,UAAA,SAAS,EAAC,gBAArC;AAAA,qBACGL,SAAS,gBAAG,QAAC,OAAD;AAAS,YAAA,SAAS,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,kBAAH,gBAEN;AACE,YAAA,EAAE,EAAC,WADL;AAEE,YAAA,IAAI,EAAC,WAFP;AAGE,2BAAe,kBAAiBQ,OAAQ,EAH1C;AAIE,YAAA,IAAI,EAAC,UAJP;AAKE,YAAA,SAAS,EAAC,YALZ;AAME,YAAA,OAAO,EAAGN,WAAW,CAACO,IAAZ,CAAkBC,KAAD,IAAWA,KAAK,CAACF,OAAN,KAAkBA,OAA9C,CANZ;AAOE,YAAA,QAAQ,EAAG,KAAKZ;AAPlB;AAAA;AAAA;AAAA;AAAA,kBAHN;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA,OAAWU,GAAX;AAAA;AAAA;AAAA;AAAA,YADF;AAgCD;;AA7D8C;AAgEjDb,SAAS,CAACkB,SAAV,GAAsB;AACpBV,EAAAA,SAAS,EAAEb,SAAS,CAACwB,KAAV,CAAgB,GAAhB,EAAqBC;AADZ,CAAtB","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { addSong, removeSong, getFavoriteSongs } from '../../services/favoriteSongsAPI';\nimport Loading from '../../Pages/Loanding';\nimport './style.css';\n\nexport default class MusicCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      checkSaveds: [],\n    };\n  }\n\n  handleSaveFavorites = async ({ target: { checked } }) => {\n    this.setState({ isLoading: true });\n    const { trackInfo } = this.props;\n    if (!checked) {\n      await removeSong(trackInfo);\n    } else {\n      await addSong(trackInfo);\n    }\n    this.setState({ isLoading: false, checkSaveds: await getFavoriteSongs() });\n  }\n\n  render() {\n    const { trackInfo: {\n      previewUrl,\n      key,\n      trackName,\n      trackId,\n    } } = this.props;\n    const { isLoading, checkSaveds } = this.state;\n\n    return (\n      <div key={ key }>\n\n        <span>{trackName}</span>\n        <div className=\"audio-and-check\">\n          <audio\n            className=\"play\"\n            data-testid=\"audio-component\"\n            src={ previewUrl }\n            controls\n          >\n            <track kind=\"captions\" />\n          </audio>\n          <label htmlFor=\"favorites\" className=\"checkbox-label\">\n            {isLoading ? <Loading className=\"checkbox-loanding\" />\n              : (\n                <input\n                  id=\"favorites\"\n                  name=\"favorites\"\n                  data-testid={ `checkbox-music-${trackId}` }\n                  type=\"checkbox\"\n                  className=\"checkHeart\"\n                  checked={ checkSaveds.some((track) => track.trackId === trackId) }\n                  onChange={ this.handleSaveFavorites }\n                />\n              )}\n            Favorita\n          </label>\n        </div>\n      </div>\n\n    );\n  }\n}\n\nMusicCard.propTypes = {\n  trackInfo: PropTypes.shape('n').isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}