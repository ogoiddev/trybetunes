{"ast":null,"code":"var _jsxFileName = \"/home/ogoidmp/dmpdev/projetos-trybe/sd-019-c-project-trybetunes/src/Components/MusicCard/index.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { addSong, getFavoriteSongs } from '../../services/favoriteSongsAPI';\nimport Loading from '../../Pages/Loanding';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class MusicCard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSaveFavorites = async _ref => {\n      let {\n        target: {\n          checked\n        }\n      } = _ref;\n      this.setState({\n        isLoading: true\n      });\n      const {\n        trackInfo\n      } = this.props;\n      await addSong(trackInfo);\n      this.setState({\n        isLoading: false,\n        checkSaveds: await getFavoriteSongs()\n      });\n    };\n\n    this.state = {\n      isLoading: false,\n      checkSaveds: []\n    };\n  }\n\n  render() {\n    const {\n      trackInfo: {\n        previewUrl,\n        key,\n        trackName,\n        trackId\n      }\n    } = this.props;\n    const {\n      isLoading,\n      checkSaveds\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: trackName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        \"data-testid\": \"audio-component\",\n        src: previewUrl,\n        controls: true,\n        children: /*#__PURE__*/_jsxDEV(\"track\", {\n          kind: \"captions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"favorites\",\n        className: \"checkbox\",\n        children: [isLoading ? /*#__PURE__*/_jsxDEV(Loading, {\n          className: \"checkbox-loanding\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 24\n        }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"favorites\",\n          \"data-testid\": `checkbox-music-${trackId}`,\n          type: \"checkbox\",\n          checked: checkSaveds.some(track => track.trackId === trackId),\n          onChange: this.handleSaveFavorites\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this), \"Favorita\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nMusicCard.propTypes = {\n  trackInfo: PropTypes.shape('n').isRequired\n};","map":{"version":3,"sources":["/home/ogoidmp/dmpdev/projetos-trybe/sd-019-c-project-trybetunes/src/Components/MusicCard/index.jsx"],"names":["React","Component","PropTypes","addSong","getFavoriteSongs","Loading","MusicCard","constructor","props","handleSaveFavorites","target","checked","setState","isLoading","trackInfo","checkSaveds","state","render","previewUrl","key","trackName","trackId","some","track","propTypes","shape","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,EAAkBC,gBAAlB,QAA0C,iCAA1C;AACA,OAAOC,OAAP,MAAoB,sBAApB;;AAEA,eAAe,MAAMC,SAAN,SAAwBL,SAAxB,CAAkC;AAC/CM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAQnBC,mBARmB,GAQG,cAAmC;AAAA,UAA5B;AAAEC,QAAAA,MAAM,EAAE;AAAEC,UAAAA;AAAF;AAAV,OAA4B;AACvD,WAAKC,QAAL,CAAc;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAd;AACA,YAAM;AAAEC,QAAAA;AAAF,UAAgB,KAAKN,KAA3B;AACA,YAAML,OAAO,CAACW,SAAD,CAAb;AACA,WAAKF,QAAL,CAAc;AAAEC,QAAAA,SAAS,EAAE,KAAb;AAAoBE,QAAAA,WAAW,EAAE,MAAMX,gBAAgB;AAAvD,OAAd;AACD,KAbkB;;AAEjB,SAAKY,KAAL,GAAa;AACXH,MAAAA,SAAS,EAAE,KADA;AAEXE,MAAAA,WAAW,EAAE;AAFF,KAAb;AAID;;AASDE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEH,MAAAA,SAAS,EAAE;AACjBI,QAAAA,UADiB;AAEjBC,QAAAA,GAFiB;AAGjBC,QAAAA,SAHiB;AAIjBC,QAAAA;AAJiB;AAAb,QAKA,KAAKb,KALX;AAMA,UAAM;AAAEK,MAAAA,SAAF;AAAaE,MAAAA;AAAb,QAA6B,KAAKC,KAAxC;AAEA,wBACE;AAAA,8BACE;AAAA,kBAAOI;AAAP;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,uBAAY,iBAAnB;AAAqC,QAAA,GAAG,EAAGF,UAA3C;AAAwD,QAAA,QAAQ,MAAhE;AAAA,+BACE;AAAO,UAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE;AAAO,QAAA,OAAO,EAAC,WAAf;AAA2B,QAAA,SAAS,EAAC,UAArC;AAAA,mBACGL,SAAS,gBAAG,QAAC,OAAD;AAAS,UAAA,SAAS,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,gBAAH,gBAEN;AACE,UAAA,IAAI,EAAC,WADP;AAEE,yBAAe,kBAAiBQ,OAAQ,EAF1C;AAGE,UAAA,IAAI,EAAC,UAHP;AAIE,UAAA,OAAO,EAAGN,WAAW,CAACO,IAAZ,CAAkBC,KAAD,IAAWA,KAAK,CAACF,OAAN,KAAkBA,OAA9C,CAJZ;AAKE,UAAA,QAAQ,EAAG,KAAKZ;AALlB;AAAA;AAAA;AAAA;AAAA,gBAHN;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA,OAAWU,GAAX;AAAA;AAAA;AAAA;AAAA,YADF;AAsBD;;AA/C8C;AAkDjDb,SAAS,CAACkB,SAAV,GAAsB;AACpBV,EAAAA,SAAS,EAAEZ,SAAS,CAACuB,KAAV,CAAgB,GAAhB,EAAqBC;AADZ,CAAtB","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { addSong, getFavoriteSongs } from '../../services/favoriteSongsAPI';\nimport Loading from '../../Pages/Loanding';\n\nexport default class MusicCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      checkSaveds: [],\n    };\n  }\n\n  handleSaveFavorites = async ({ target: { checked } }) => {\n    this.setState({ isLoading: true });\n    const { trackInfo } = this.props;\n    await addSong(trackInfo);\n    this.setState({ isLoading: false, checkSaveds: await getFavoriteSongs() });\n  }\n\n  render() {\n    const { trackInfo: {\n      previewUrl,\n      key,\n      trackName,\n      trackId,\n    } } = this.props;\n    const { isLoading, checkSaveds } = this.state;\n\n    return (\n      <div key={ key }>\n        <span>{trackName}</span>\n        <audio data-testid=\"audio-component\" src={ previewUrl } controls>\n          <track kind=\"captions\" />\n        </audio>\n        <label htmlFor=\"favorites\" className=\"checkbox\">\n          {isLoading ? <Loading className=\"checkbox-loanding\" />\n            : (\n              <input\n                name=\"favorites\"\n                data-testid={ `checkbox-music-${trackId}` }\n                type=\"checkbox\"\n                checked={ checkSaveds.some((track) => track.trackId === trackId) }\n                onChange={ this.handleSaveFavorites }\n              />\n            )}\n          Favorita\n        </label>\n      </div>\n\n    );\n  }\n}\n\nMusicCard.propTypes = {\n  trackInfo: PropTypes.shape('n').isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}