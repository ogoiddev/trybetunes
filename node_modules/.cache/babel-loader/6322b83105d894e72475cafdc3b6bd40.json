{"ast":null,"code":"var _jsxFileName = \"/home/ogoidmp/dmpdev/projetos-trybe/sd-019-c-project-trybetunes/src/Components/MusicCard/index.jsx\";\nimport React, { Component } from 'react';\nimport { addSong } from '../../services/favoriteSongsAPI';\nimport Loading from '../../Pages/Loanding';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class MusicCard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handlecheckFavorites = () => {\n      const {\n        trackId\n      } = this.props;\n    };\n\n    this.handleSaveFavorites = async () => {\n      this.setState({\n        isLoading: true\n      });\n      const {\n        trackInfo\n      } = this.props;\n      await addSong(trackInfo);\n      this.setState({\n        isLoading: false\n      });\n    };\n\n    this.state = {\n      isLoading: false,\n      isChecked: false\n    };\n  }\n\n  componentDidMount() {\n    this.handlecheckFavorites();\n  }\n\n  render() {\n    const {\n      trackInfo,\n      trackInfo: {\n        previewUrl,\n        key,\n        trackName,\n        trackId\n      }\n    } = this.props;\n    const {\n      isLoading,\n      isChecked\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: trackName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        \"data-testid\": \"audio-component\",\n        src: previewUrl,\n        controls: true,\n        children: /*#__PURE__*/_jsxDEV(\"track\", {\n          kind: \"captions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"favorites\",\n        className: \"checkbox\",\n        children: [isLoading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 24\n        }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"favorites\",\n          \"data-testid\": `checkbox-music-${trackId}`,\n          type: \"checkbox\",\n          checked: isChecked,\n          onChange: this.handleSaveFavorites\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this), \"Favorita\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/ogoidmp/dmpdev/projetos-trybe/sd-019-c-project-trybetunes/src/Components/MusicCard/index.jsx"],"names":["React","Component","addSong","Loading","MusicCard","constructor","props","handlecheckFavorites","trackId","handleSaveFavorites","setState","isLoading","trackInfo","state","isChecked","componentDidMount","render","previewUrl","key","trackName"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,iCAAxB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;AAEA,eAAe,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAC/CI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAYnBC,oBAZmB,GAYI,MAAM;AAC3B,YAAM;AAAEC,QAAAA;AAAF,UAAc,KAAKF,KAAzB;AACD,KAdkB;;AAAA,SAgBnBG,mBAhBmB,GAgBG,YAAY;AAChC,WAAKC,QAAL,CAAc;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAd;AACA,YAAM;AAAEC,QAAAA;AAAF,UAAgB,KAAKN,KAA3B;AACA,YAAMJ,OAAO,CAACU,SAAD,CAAb;AACA,WAAKF,QAAL,CAAc;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAd;AACD,KArBkB;;AAEjB,SAAKE,KAAL,GAAa;AACXF,MAAAA,SAAS,EAAE,KADA;AAEXG,MAAAA,SAAS,EAAE;AAFA,KAAb;AAID;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKR,oBAAL;AACD;;AAaDS,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEJ,MAAAA,SAAF;AAAaA,MAAAA,SAAS,EAAE;AAC5BK,QAAAA,UAD4B;AAE5BC,QAAAA,GAF4B;AAG5BC,QAAAA,SAH4B;AAI5BX,QAAAA;AAJ4B;AAAxB,QAKA,KAAKF,KALX;AAMA,UAAM;AAAEK,MAAAA,SAAF;AAAaG,MAAAA;AAAb,QAA2B,KAAKD,KAAtC;AAEA,wBACE;AAAA,8BACE;AAAA,kBAAOM;AAAP;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,uBAAY,iBAAnB;AAAqC,QAAA,GAAG,EAAGF,UAA3C;AAAwD,QAAA,QAAQ,MAAhE;AAAA,+BACE;AAAO,UAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE;AAAO,QAAA,OAAO,EAAC,WAAf;AAA2B,QAAA,SAAS,EAAC,UAArC;AAAA,mBACGN,SAAS,gBAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBAAH,gBAEN;AACE,UAAA,IAAI,EAAC,WADP;AAEE,yBAAe,kBAAiBH,OAAQ,EAF1C;AAGE,UAAA,IAAI,EAAC,UAHP;AAIE,UAAA,OAAO,EAAGM,SAJZ;AAKE,UAAA,QAAQ,EAAG,KAAKL;AALlB;AAAA;AAAA;AAAA;AAAA,gBAHN;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA,OAAWS,GAAX;AAAA;AAAA;AAAA;AAAA,YADF;AAsBD;;AAvD8C","sourcesContent":["import React, { Component } from 'react';\nimport { addSong } from '../../services/favoriteSongsAPI';\nimport Loading from '../../Pages/Loanding';\n\nexport default class MusicCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      isChecked: false,\n    };\n  }\n\n  componentDidMount() {\n    this.handlecheckFavorites();\n  }\n\n  handlecheckFavorites = () => {\n    const { trackId } = this.props;\n  }\n\n  handleSaveFavorites = async () => {\n    this.setState({ isLoading: true });\n    const { trackInfo } = this.props;\n    await addSong(trackInfo);\n    this.setState({ isLoading: false });\n  }\n\n  render() {\n    const { trackInfo, trackInfo: {\n      previewUrl,\n      key,\n      trackName,\n      trackId,\n    } } = this.props;\n    const { isLoading, isChecked } = this.state;\n\n    return (\n      <div key={ key }>\n        <span>{trackName}</span>\n        <audio data-testid=\"audio-component\" src={ previewUrl } controls>\n          <track kind=\"captions\" />\n        </audio>\n        <label htmlFor=\"favorites\" className=\"checkbox\">\n          {isLoading ? <Loading />\n            : (\n              <input\n                name=\"favorites\"\n                data-testid={ `checkbox-music-${trackId}` }\n                type=\"checkbox\"\n                checked={ isChecked }\n                onChange={ this.handleSaveFavorites }\n              />\n            )}\n          Favorita\n        </label>\n      </div>\n\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}